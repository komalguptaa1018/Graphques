class Solution {
  public:
    bool isBipartite(int V, vector<vector<int>> &edges) {
        // Code here
      vector<int> color(V, -1);

        queue<int>q;
        
       vector<vector<int>>adj(V);
       
       //creating adjacency list
       
       for (int i=0;i<edges.size();i++){
           
           int u=edges[i][0];
           int v=edges[i][1];
                  
       adj[u].push_back(v);
adj[v].push_back(u); // Only if the graph is undirected

                  
       }
       
       q.push(0);
       color[0]=0;
       while(!q.empty()){
           int node=q.front();
           q.pop();
           
          for(int j = 0; j < adj[node].size(); j++)
{
               //if color not assigned
               if(color[adj[node][j]]==-1){
               color[adj[node][j]]=(color[node]+1)%2;
               q.push(adj[node][j]);
               }
               
               //if already assigned
             else{
                 if (color[node]==color[adj[node][j]])
                 return 0;
             }
           }
       }
    
       return 1;
    }
};
